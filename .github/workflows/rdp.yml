name: The Final Diagnostic Gateway
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Build and Configure Server
        id: main_build
        run: |
          # --- PART A: DOWNLOAD AND INSTALL ---
          Write-Host "Downloading and Installing Tools..."
          Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-windows-x86_64-signed.exe" -OutFile "$env:USERPROFILE\playit.exe"
          Invoke-WebRequest -Uri "https://download.wireguard.com/windows-client/wireguard-amd64-0.5.3.msi" -OutFile "wireguard.msi"
          Start-Process -FilePath "msiexec.exe" -ArgumentList "/i wireguard.msi /qn" -Wait
          
          # --- PART B: CONFIGURE WIREGUARD ---
          Write-Host "Configuring WireGuard..."
          cd "C:\Program Files\WireGuard"
          $serverPrivateKey = (.\wg.exe genkey)
          $serverPublicKey = ($serverPrivateKey | .\wg.g pubkey)
          $clientPrivateKey = (.\wg.exe genkey)
          $clientPublicKey = ($clientPrivateKey | .\wg.exe pubkey)
          @"
          [Interface]
          PrivateKey = $serverPrivateKey
          Address = 10.0.0.1/24
          ListenPort = 51820
          [Peer]
          PublicKey = $clientPublicKey
          AllowedIPs = 10.0.0.2/32
          "@ | Set-Content wg0.conf
          .\wireguard.exe /installservice wg0.conf
          New-NetNat -Name "WireGuardNAT" -InternalIPInterfaceAddressPrefix 10.0.0.0/24
          
          # --- PART C: OUTPUT THE CLIENT CONFIG ---
          # We are saving the client key to a file so the next step can read it if needed,
          # but the main purpose is to have all variables ready for the final display.
          $clientPrivateKey | Set-Content "$env:USERPROFILE\client-private.key"
          $serverPublicKey | Set-Content "$env:USERPROFILE\server-public.key"
          
          $clientKeyForDisplay = Get-Content "$env:USERPROFILE\client-private.key"
          $serverKeyForDisplay = Get-Content "$env:USERPROFILE\server-public.key"
          
          Write-Host "--- COPY EVERYTHING BELOW THIS LINE ---"
          Write-Host "[Interface]"
          Write-Host "PrivateKey = $clientKeyForDisplay"
          Write-Host "Address = 10.0.0.2/24"
          Write-Host "DNS = 1.1.1.1"
          Write-Host ""
          Write-Host "[Peer]"
          Write-Host "PublicKey = $serverKeyForDisplay"
          Write-Host "Endpoint = YOUR_PLAYIT_UDP_ADDRESS:PORT"
          Write-Host "AllowedIPs = 0.0.0.0/0"
          Write-Host "PersistentKeepalive = 25"
          Write-Host "------------------------------------"

      - name: Start Playit Agent and Report Status
        env:
          PLAYIT_AUTH_KEY: ${{ secrets.PL }} 
        run: |
          Write-Host "Attempting to start Playit agent. The following lines are the LIVE output from the agent..."
          # --- THE FIX: We run Playit directly to see its output. This step will now "hang" here, which is what keeps the runner alive. ---
          & "$env:USERPROFILE\playit.exe" --secret $env:PLAYIT_AUTH_KEY
